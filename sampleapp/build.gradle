apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
buildscript {
    repositories {
        jcenter()
        maven { url 'https://raw.github.com/xujiaao/mvn-repository/master/releases' }
        //maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.github.xujiaao:aarLinkSources:1.0.0'
        classpath 'me.tatarka:gradle-retrolambda:3.0.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

repositories {
    maven { url "http://dl.bintray.com/populov/maven" }
    maven { url "http://repo1.maven.org/maven2" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }

    jcenter()
    flatDir {
        dir 'libs'
    }
}


sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'gen']
        resources.srcDir file('src/main/resources')
    }

    testLocal {
        java.srcDir file('src/androidTest/java')
        resources.srcDir file('src/androidTest/resources')
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "at.bookworm.sampleapp"
        minSdkVersion 22
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        instrumentTest.setRoot('src/androidTest/')
        unitTests.setRoot('src/test/')
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries = false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives sourcesJar
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "joda-time:joda-time:2.7"
    compile 'org.joda:joda-convert:1.7'
    compile 'com.netflix.rxjava:rxjava-core:0.20.7'
    compile 'com.netflix.rxjava:rxjava-android:0.20.7'
    provided "org.projectlombok:lombok:1.16.4"
    apt "org.projectlombok:lombok:1.16.4"
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    //provided 'org.glassfish:javax.annotation:10.0-b28'

    compile 'com.android.support:support-v13:22.1.+'
    compile 'com.android.support:support-annotations:22.1.+'
    androidTestCompile 'com.android.support:support-annotations:22.1.+'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.0'
    compile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support.test:rules:0.2'
    androidTestCompile 'com.google.dagger:dagger:2.0'
    androidTestApt 'com.google.dagger:dagger-compiler:2.0'
    androidTestApt 'org.projectlombok:lombok:1.16.4'
}
